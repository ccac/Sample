//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SilverlightDemoWCF.BlogService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="Post", Namespace="http://schemas.datacontract.org/2004/07/SilverlightDemoWCF_Web")]
    public partial class Post : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthorField;
        
        private int IdField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.ServiceModel.ServiceContractAttribute()]
    public interface IBlog {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBlog/GetPosts", ReplyAction="http://tempuri.org/IBlog/GetPostsResponse")]
        System.IAsyncResult BeginGetPosts(System.AsyncCallback callback, object asyncState);
        
        SilverlightDemoWCF.BlogService.Post[] EndGetPosts(System.IAsyncResult result);
    }
    
    public interface IBlogChannel : SilverlightDemoWCF.BlogService.IBlog, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class GetPostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightDemoWCF.BlogService.Post[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightDemoWCF.BlogService.Post[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class BlogClient : System.ServiceModel.ClientBase<SilverlightDemoWCF.BlogService.IBlog>, SilverlightDemoWCF.BlogService.IBlog {
        
        private BeginOperationDelegate onBeginGetPostsDelegate;
        
        private EndOperationDelegate onEndGetPostsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPostsCompletedDelegate;
        
        private static System.ServiceModel.Channels.Binding defaultBinding = new System.ServiceModel.BasicHttpBinding();
        
        private static System.ServiceModel.EndpointAddress defaultAddress = new System.ServiceModel.EndpointAddress("http://localhost:1593/Blog.svc");
        
        public BlogClient() : 
                this(defaultBinding, defaultAddress) {
        }
        
        public BlogClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetPostsCompletedEventArgs> GetPostsCompleted;
        
        System.IAsyncResult SilverlightDemoWCF.BlogService.IBlog.BeginGetPosts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPosts(callback, asyncState);
        }
        
        SilverlightDemoWCF.BlogService.Post[] SilverlightDemoWCF.BlogService.IBlog.EndGetPosts(System.IAsyncResult result) {
            return base.Channel.EndGetPosts(result);
        }
        
        private System.IAsyncResult OnBeginGetPosts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SilverlightDemoWCF.BlogService.IBlog)(this)).BeginGetPosts(callback, asyncState);
        }
        
        private object[] OnEndGetPosts(System.IAsyncResult result) {
            SilverlightDemoWCF.BlogService.Post[] retVal = ((SilverlightDemoWCF.BlogService.IBlog)(this)).EndGetPosts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPostsCompleted(object state) {
            if ((this.GetPostsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPostsCompleted(this, new GetPostsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPostsAsync() {
            this.GetPostsAsync(null);
        }
        
        public void GetPostsAsync(object userState) {
            if ((this.onBeginGetPostsDelegate == null)) {
                this.onBeginGetPostsDelegate = new BeginOperationDelegate(this.OnBeginGetPosts);
            }
            if ((this.onEndGetPostsDelegate == null)) {
                this.onEndGetPostsDelegate = new EndOperationDelegate(this.OnEndGetPosts);
            }
            if ((this.onGetPostsCompletedDelegate == null)) {
                this.onGetPostsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPostsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPostsDelegate, null, this.onEndGetPostsDelegate, this.onGetPostsCompletedDelegate, userState);
        }
        
        protected override SilverlightDemoWCF.BlogService.IBlog CreateChannel() {
            return new BlogClientChannel(this);
        }
        
        private class BlogClientChannel : ChannelBase<SilverlightDemoWCF.BlogService.IBlog>, SilverlightDemoWCF.BlogService.IBlog {
            
            public BlogClientChannel(System.ServiceModel.ClientBase<SilverlightDemoWCF.BlogService.IBlog> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetPosts(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPosts", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightDemoWCF.BlogService.Post[] EndGetPosts(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightDemoWCF.BlogService.Post[] _result = ((SilverlightDemoWCF.BlogService.Post[])(base.EndInvoke("GetPosts", _args, result)));
                return _result;
            }
        }
    }
}
