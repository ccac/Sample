//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SilverlightDemoLiveSearch.LiveSearchWS {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultItem", Namespace="http://tempuri.org/")]
    public partial class SearchResultItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string TitleField;
        
        private string UrlField;
        
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.ServiceModel.ServiceContractAttribute()]
    public interface LiveSearchWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoSearch", ReplyAction="*")]
        System.IAsyncResult BeginDoSearch(SilverlightDemoLiveSearch.LiveSearchWS.DoSearchRequest request, System.AsyncCallback callback, object asyncState);
        
        SilverlightDemoLiveSearch.LiveSearchWS.DoSearchResponse EndDoSearch(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DoSearchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DoSearch", Namespace="http://tempuri.org/", Order=0)]
        public SilverlightDemoLiveSearch.LiveSearchWS.DoSearchRequestBody Body;
        
        public DoSearchRequest() {
        }
        
        public DoSearchRequest(SilverlightDemoLiveSearch.LiveSearchWS.DoSearchRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class DoSearchRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string query;
        
        public DoSearchRequestBody() {
        }
        
        public DoSearchRequestBody(string query) {
            this.query = query;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DoSearchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DoSearchResponse", Namespace="http://tempuri.org/", Order=0)]
        public SilverlightDemoLiveSearch.LiveSearchWS.DoSearchResponseBody Body;
        
        public DoSearchResponse() {
        }
        
        public DoSearchResponse(SilverlightDemoLiveSearch.LiveSearchWS.DoSearchResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class DoSearchResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public SilverlightDemoLiveSearch.LiveSearchWS.SearchResultItem[] DoSearchResult;
        
        public DoSearchResponseBody() {
        }
        
        public DoSearchResponseBody(SilverlightDemoLiveSearch.LiveSearchWS.SearchResultItem[] DoSearchResult) {
            this.DoSearchResult = DoSearchResult;
        }
    }
    
    public interface LiveSearchWebServiceSoapChannel : SilverlightDemoLiveSearch.LiveSearchWS.LiveSearchWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class DoSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightDemoLiveSearch.LiveSearchWS.SearchResultItem[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightDemoLiveSearch.LiveSearchWS.SearchResultItem[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class LiveSearchWebServiceSoapClient : System.ServiceModel.ClientBase<SilverlightDemoLiveSearch.LiveSearchWS.LiveSearchWebServiceSoap>, SilverlightDemoLiveSearch.LiveSearchWS.LiveSearchWebServiceSoap {
        
        private BeginOperationDelegate onBeginDoSearchDelegate;
        
        private EndOperationDelegate onEndDoSearchDelegate;
        
        private System.Threading.SendOrPostCallback onDoSearchCompletedDelegate;
        
        private static System.ServiceModel.Channels.Binding defaultBinding = new System.ServiceModel.BasicHttpBinding();
        
        private static System.ServiceModel.EndpointAddress defaultAddress = new System.ServiceModel.EndpointAddress("http://localhost:3334/LiveSearchWebService.asmx");
        
        public LiveSearchWebServiceSoapClient() : 
                this(defaultBinding, defaultAddress) {
        }
        
        public LiveSearchWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<DoSearchCompletedEventArgs> DoSearchCompleted;
        
        System.IAsyncResult SilverlightDemoLiveSearch.LiveSearchWS.LiveSearchWebServiceSoap.BeginDoSearch(SilverlightDemoLiveSearch.LiveSearchWS.DoSearchRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoSearch(request, callback, asyncState);
        }
        
        private System.IAsyncResult BeginDoSearch(string query, System.AsyncCallback callback, object asyncState) {
            SilverlightDemoLiveSearch.LiveSearchWS.DoSearchRequest inValue = new SilverlightDemoLiveSearch.LiveSearchWS.DoSearchRequest();
            inValue.Body = new SilverlightDemoLiveSearch.LiveSearchWS.DoSearchRequestBody();
            inValue.Body.query = query;
            return ((SilverlightDemoLiveSearch.LiveSearchWS.LiveSearchWebServiceSoap)(this)).BeginDoSearch(inValue, callback, asyncState);
        }
        
        SilverlightDemoLiveSearch.LiveSearchWS.DoSearchResponse SilverlightDemoLiveSearch.LiveSearchWS.LiveSearchWebServiceSoap.EndDoSearch(System.IAsyncResult result) {
            return base.Channel.EndDoSearch(result);
        }
        
        private SilverlightDemoLiveSearch.LiveSearchWS.SearchResultItem[] EndDoSearch(System.IAsyncResult result) {
            SilverlightDemoLiveSearch.LiveSearchWS.DoSearchResponse retVal = ((SilverlightDemoLiveSearch.LiveSearchWS.LiveSearchWebServiceSoap)(this)).EndDoSearch(result);
            return retVal.Body.DoSearchResult;
        }
        
        private System.IAsyncResult OnBeginDoSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string query = ((string)(inValues[0]));
            return this.BeginDoSearch(query, callback, asyncState);
        }
        
        private object[] OnEndDoSearch(System.IAsyncResult result) {
            SilverlightDemoLiveSearch.LiveSearchWS.SearchResultItem[] retVal = this.EndDoSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoSearchCompleted(object state) {
            if ((this.DoSearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoSearchCompleted(this, new DoSearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoSearchAsync(string query) {
            this.DoSearchAsync(query, null);
        }
        
        public void DoSearchAsync(string query, object userState) {
            if ((this.onBeginDoSearchDelegate == null)) {
                this.onBeginDoSearchDelegate = new BeginOperationDelegate(this.OnBeginDoSearch);
            }
            if ((this.onEndDoSearchDelegate == null)) {
                this.onEndDoSearchDelegate = new EndOperationDelegate(this.OnEndDoSearch);
            }
            if ((this.onDoSearchCompletedDelegate == null)) {
                this.onDoSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoSearchCompleted);
            }
            base.InvokeAsync(this.onBeginDoSearchDelegate, new object[] {
                        query}, this.onEndDoSearchDelegate, this.onDoSearchCompletedDelegate, userState);
        }
        
        protected override SilverlightDemoLiveSearch.LiveSearchWS.LiveSearchWebServiceSoap CreateChannel() {
            return new LiveSearchWebServiceSoapClientChannel(this);
        }
        
        private class LiveSearchWebServiceSoapClientChannel : ChannelBase<SilverlightDemoLiveSearch.LiveSearchWS.LiveSearchWebServiceSoap>, SilverlightDemoLiveSearch.LiveSearchWS.LiveSearchWebServiceSoap {
            
            public LiveSearchWebServiceSoapClientChannel(System.ServiceModel.ClientBase<SilverlightDemoLiveSearch.LiveSearchWS.LiveSearchWebServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoSearch(SilverlightDemoLiveSearch.LiveSearchWS.DoSearchRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("DoSearch", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightDemoLiveSearch.LiveSearchWS.DoSearchResponse EndDoSearch(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightDemoLiveSearch.LiveSearchWS.DoSearchResponse _result = ((SilverlightDemoLiveSearch.LiveSearchWS.DoSearchResponse)(base.EndInvoke("DoSearch", _args, result)));
                return _result;
            }
        }
    }
}
