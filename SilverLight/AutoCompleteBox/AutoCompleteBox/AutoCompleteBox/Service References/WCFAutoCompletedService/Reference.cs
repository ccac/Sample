//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 2.0.5.0
// 
namespace AutoCompleteBoxSample.WCFAutoCompletedService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeInfo", Namespace="http://schemas.datacontract.org/2004/07/AutoCompleteBox.Web.Service")]
    public partial class EmployeeInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FirstNameField;
        
        private string LastNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="WCFAutoCompletedService.AutoCompletedService")]
    public interface AutoCompletedService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:AutoCompletedService/GetEmployeeCollection", ReplyAction="urn:AutoCompletedService/GetEmployeeCollectionResponse")]
        System.IAsyncResult BeginGetEmployeeCollection(string name, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<AutoCompleteBoxSample.WCFAutoCompletedService.EmployeeInfo> EndGetEmployeeCollection(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface AutoCompletedServiceChannel : AutoCompleteBoxSample.WCFAutoCompletedService.AutoCompletedService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetEmployeeCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmployeeCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<AutoCompleteBoxSample.WCFAutoCompletedService.EmployeeInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<AutoCompleteBoxSample.WCFAutoCompletedService.EmployeeInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AutoCompletedServiceClient : System.ServiceModel.ClientBase<AutoCompleteBoxSample.WCFAutoCompletedService.AutoCompletedService>, AutoCompleteBoxSample.WCFAutoCompletedService.AutoCompletedService {
        
        private BeginOperationDelegate onBeginGetEmployeeCollectionDelegate;
        
        private EndOperationDelegate onEndGetEmployeeCollectionDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmployeeCollectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AutoCompletedServiceClient() {
        }
        
        public AutoCompletedServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AutoCompletedServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AutoCompletedServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AutoCompletedServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetEmployeeCollectionCompletedEventArgs> GetEmployeeCollectionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AutoCompleteBoxSample.WCFAutoCompletedService.AutoCompletedService.BeginGetEmployeeCollection(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmployeeCollection(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<AutoCompleteBoxSample.WCFAutoCompletedService.EmployeeInfo> AutoCompleteBoxSample.WCFAutoCompletedService.AutoCompletedService.EndGetEmployeeCollection(System.IAsyncResult result) {
            return base.Channel.EndGetEmployeeCollection(result);
        }
        
        private System.IAsyncResult OnBeginGetEmployeeCollection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((AutoCompleteBoxSample.WCFAutoCompletedService.AutoCompletedService)(this)).BeginGetEmployeeCollection(name, callback, asyncState);
        }
        
        private object[] OnEndGetEmployeeCollection(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<AutoCompleteBoxSample.WCFAutoCompletedService.EmployeeInfo> retVal = ((AutoCompleteBoxSample.WCFAutoCompletedService.AutoCompletedService)(this)).EndGetEmployeeCollection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmployeeCollectionCompleted(object state) {
            if ((this.GetEmployeeCollectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmployeeCollectionCompleted(this, new GetEmployeeCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmployeeCollectionAsync(string name) {
            this.GetEmployeeCollectionAsync(name, null);
        }
        
        public void GetEmployeeCollectionAsync(string name, object userState) {
            if ((this.onBeginGetEmployeeCollectionDelegate == null)) {
                this.onBeginGetEmployeeCollectionDelegate = new BeginOperationDelegate(this.OnBeginGetEmployeeCollection);
            }
            if ((this.onEndGetEmployeeCollectionDelegate == null)) {
                this.onEndGetEmployeeCollectionDelegate = new EndOperationDelegate(this.OnEndGetEmployeeCollection);
            }
            if ((this.onGetEmployeeCollectionCompletedDelegate == null)) {
                this.onGetEmployeeCollectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmployeeCollectionCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmployeeCollectionDelegate, new object[] {
                        name}, this.onEndGetEmployeeCollectionDelegate, this.onGetEmployeeCollectionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override AutoCompleteBoxSample.WCFAutoCompletedService.AutoCompletedService CreateChannel() {
            return new AutoCompletedServiceClientChannel(this);
        }
        
        private class AutoCompletedServiceClientChannel : ChannelBase<AutoCompleteBoxSample.WCFAutoCompletedService.AutoCompletedService>, AutoCompleteBoxSample.WCFAutoCompletedService.AutoCompletedService {
            
            public AutoCompletedServiceClientChannel(System.ServiceModel.ClientBase<AutoCompleteBoxSample.WCFAutoCompletedService.AutoCompletedService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetEmployeeCollection(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetEmployeeCollection", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<AutoCompleteBoxSample.WCFAutoCompletedService.EmployeeInfo> EndGetEmployeeCollection(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<AutoCompleteBoxSample.WCFAutoCompletedService.EmployeeInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<AutoCompleteBoxSample.WCFAutoCompletedService.EmployeeInfo>)(base.EndInvoke("GetEmployeeCollection", _args, result)));
                return _result;
            }
        }
    }
}
